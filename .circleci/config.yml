version: 2
jobs:
  build-job:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            - 1-gems-{{ checksum "Gemfile.lock" }}
            - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Ruby Dependencies
          command: bundle check || bundle install --path vendor/bundle
      - run:
          name: Download Android Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - save_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
          paths:
            - ~/.gradle
      - run:
          name: Run Unit Tests
          command: bundle exec fastlane unit_tests release:false
      - run:
          name: Setup emulator
          command: sdkmanager "system-images;android-25;google_apis;armeabi-v7a" && echo "no" | avdmanager create avd -n Nexus_5X_API_25 -k "system-images;android-25;google_apis;armeabi-v7a"
      - run:
          name: Run Integration Tests
          command: bundle exec fastlane integration_tests
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

  deploy-beta-job:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: Deploying to Crashlytics Beta
          command: bundle exec fastlane beta

  deploy-prod-job:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
        name: Deploying to Play Store
        command: bundle exec fastlane deploy

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job

      - deploy-beta-job:
          requires:
            - build-job
          filters:
            branches:
              only: beta

      - deploy-prod-job:
          requires:
            - build-job
          filters:
            branches:
              only: production
